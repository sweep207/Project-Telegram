module.exports = (bot, config) => {
  // üõë L·ªánh c·∫•m ng∆∞·ªùi d√πng
  bot.onText(/\/ban(?:\s+(@\S+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (userId.toString() !== config.adminId) {
      bot.sendMessage(chatId, 'B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.');
      return;
    }

    let targetId = null;
    let targetUsername = match[1]; // D·ªØ li·ªáu nh·∫≠p t·ª´ l·ªánh

    if (msg.reply_to_message) {
      // N·∫øu reply v√†o tin nh·∫Øn, l·∫•y ID ng∆∞·ªùi b·ªã c·∫•m
      targetId = msg.reply_to_message.from.id;
      targetUsername = msg.reply_to_message.from.username || `ID: ${targetId}`; // S·ª≠ d·ª•ng username n·∫øu c√≥, n·∫øu kh√¥ng th√¨ d√πng ID
    } else if (targetUsername) {
      // N·∫øu nh·∫≠p username, t√¨m ID c·ªßa ng∆∞·ªùi d√πng theo @username
      try {
        const chatMember = await bot.getChatMember(chatId, targetUsername);
        targetId = chatMember.user.id;
      } catch (err) {
        bot.sendMessage(chatId, '‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†y.');
        return;
      }
    }

    if (!targetId) {
      bot.sendMessage(chatId, 'üìå Vui l√≤ng reply tin nh·∫Øn ho·∫∑c nh·∫≠p @username ƒë·ªÉ c·∫•m.');
      return;
    }

    try {
      await bot.banChatMember(chatId, targetId);
      bot.sendMessage(chatId, `‚úÖ ƒê√£ c·∫•m ng∆∞·ªùi d√πng *${targetUsername}* kh·ªèi nh√≥m.`, { parse_mode: 'Markdown' });
    } catch (err) {
      console.error('Kh√¥ng th·ªÉ c·∫•m ng∆∞·ªùi d√πng:', err);
      bot.sendMessage(chatId, '‚ùå Kh√¥ng th·ªÉ c·∫•m ng∆∞·ªùi d√πng. Ki·ªÉm tra quy·ªÅn c·ªßa bot.');
    }
  });

  // üîì L·ªánh m·ªü kh√≥a ng∆∞·ªùi d√πng (unban)
  bot.onText(/\/unban(?:\s+(@\S+))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (userId.toString() !== config.adminId) {
      bot.sendMessage(chatId, 'B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.');
      return;
    }

    let targetId = null;
    let targetUsername = match[1]; // D·ªØ li·ªáu nh·∫≠p t·ª´ l·ªánh

    if (msg.reply_to_message) {
      // N·∫øu reply v√†o tin nh·∫Øn, l·∫•y ID ng∆∞·ªùi b·ªã c·∫•m
      targetId = msg.reply_to_message.from.id;
      targetUsername = msg.reply_to_message.from.username || `ID: ${targetId}`; // S·ª≠ d·ª•ng username n·∫øu c√≥, n·∫øu kh√¥ng th√¨ d√πng ID
    } else if (targetUsername) {
      // N·∫øu nh·∫≠p username, t√¨m ID c·ªßa ng∆∞·ªùi d√πng theo @username
      try {
        const chatMember = await bot.getChatMember(chatId, targetUsername);
        targetId = chatMember.user.id;
      } catch (err) {
        bot.sendMessage(chatId, '‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†y.');
        return;
      }
    }

    if (!targetId) {
      bot.sendMessage(chatId, 'üìå Vui l√≤ng reply tin nh·∫Øn ho·∫∑c nh·∫≠p @username ƒë·ªÉ m·ªü kh√≥a.');
      return;
    }

    try {
      await bot.unbanChatMember(chatId, targetId);
      bot.sendMessage(chatId, `‚úÖ ƒê√£ m·ªü kh√≥a ng∆∞·ªùi d√πng *${targetUsername}* kh·ªèi nh√≥m.`, { parse_mode: 'Markdown' });
    } catch (err) {
      console.error('Kh√¥ng th·ªÉ m·ªü kh√≥a ng∆∞·ªùi d√πng:', err);
      bot.sendMessage(chatId, '‚ùå Kh√¥ng th·ªÉ m·ªü kh√≥a ng∆∞·ªùi d√πng. Ki·ªÉm tra quy·ªÅn c·ªßa bot.');
    }
  });
};